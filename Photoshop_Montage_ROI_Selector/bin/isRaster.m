function [ wellisit ] = isRaster(  )
% FUNCTION []=setActiveLayer( layername )
% Requires: Photoshop CS5 Extended, and an active connection to a running
% version of photoshop. Photoshop must be running before MATLAB starts!
%
% This function connects to a running copy of Photoshop CS5.1, and sets the
% input name as the active layer.
%
%
%     Copyright (C) 2014  Robert F Cooper
% 
%     This program is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
% 
%     This program is distributed in the hope that it will be useful,
%     but WITHOUT ANY WARRANTY; without even the implied warranty of
%     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%     GNU General Public License for more details.
% 
%     You should have received a copy of the GNU General Public License
%     along with this program.  If not, see <http://www.gnu.org/licenses/>.
%
%   This script determines if the active layer is a raster or not.
%
% This code was presented by Michael L Hale, on Jul 04, 2012 at 11:01 pm 
% Accessed 9/30/2014, http://www.ps-scripts.com/bb/viewtopic.php?p=23179
% Modified slightly by Robert Cooper on 9/30/2014, for readability and utility
% in the Photoshop/MATLAB ROI extraction script

script = ['function isRaster(){'...
'           var ref = new ActionReference();'...
'           ref.putEnumerated( charIDToTypeID("Lyr "), charIDToTypeID("Ordn"), charIDToTypeID("Trgt") );'...
'           var desc =  executeActionGet(ref);'...
'           var layerType = typeIDToStringID(desc.getEnumerationValue( stringIDToTypeID( "layerSection" )));'...
'       if( layerType != "layerSectionContent" ){ return;}'... % return if layerSet
'       if( desc.hasKey( stringIDToTypeID( "textKey" ) ) ){ return LayerKind.TEXT; }'...
'       if( desc.hasKey( stringIDToTypeID( "smartObject" ) ) ){ return LayerKind.SMARTOBJECT; }'... % includes LayerKind.VIDEO
'       if( desc.hasKey( stringIDToTypeID( "layer3D" ) ) ){ return LayerKind.LAYER3D; }'...
'       if( desc.hasKey( stringIDToTypeID( "adjustment" ) ) ){'...
'          switch(typeIDToStringID(desc.getList (stringIDToTypeID("adjustment")).getClass (0))){'...
'             case "photoFilter" : return LayerKind.PHOTOFILTER;'...
'             case "solidColorLayer" : return LayerKind.SOLIDFILL;'...
'             case "gradientMapClass" : return LayerKind.GRADIENTMAP;'...
'             case "gradientMapLayer" : return LayerKind.GRADIENTFILL;'...
'             case "hueSaturation" : return LayerKind.HUESATURATION;'...
'             case "colorLookup" : return;'... % //this does not exist and errors with getting layer kind
'             case "colorBalance" : return LayerKind.COLORBALANCE;'...
'             case "patternLayer" : return LayerKind.PATTERNFILL;'...
'             case "invert" : return LayerKind.INVERSION;'...
'             case "posterization" : return LayerKind.POSTERIZE;'...
'             case "thresholdClassEvent" : return LayerKind.THRESHOLD;'...
'             case "blackAndWhite" : return LayerKind.BLACKANDWHITE;'...
'             case "selectiveColor" : return LayerKind.SELECTIVECOLOR;'...
'             case "vibrance" : return LayerKind.VIBRANCE;'...
'             case "brightnessEvent" : return LayerKind.BRIGHTNESSCONTRAST;'...
'             case "channelMixer" : return LayerKind.CHANNELMIXER;'...
'             case "curves" : return LayerKind.CURVES;'...
'             case "exposure" : return LayerKind.EXPOSURE;'...
''...         % if not one of the above adjustments return - adjustment layer type
'             default : return typeIDToStringID(desc.getList (stringIDToTypeID("adjustment")).getClass (0));'...
'          }'...
'       }'...
'        return LayerKind.NORMAL;'... % if we get here normal should be the only choice left.
' };'...
''...
'isRaster() == LayerKind.NORMAL ? 1:0;'];
   
   wellisit = str2num(psjavascript(script));

   
   
end

